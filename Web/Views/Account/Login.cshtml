@model LoginViewModel
@{
    ViewData["Title"] = "Login";
}

<div class="flex items-center justify-center min-h-full bg-gray-100">
    <div class="w-full max-w-md bg-white p-8 rounded-lg shadow-md">
        <h3 class="mt-10 text-center text-2xl font-bold tracking-tight text-gray-900">Sign In</h3>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="text-red-500 text-sm mb-4">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }
        <form asp-controller="Account" asp-action="Login" method="post" class="space-y-6" novalidate>
            <!-- Email Field -->
            <div class="mb-4">
                <label asp-for="Email" class="block text-sm font-medium text-gray-900">Email</label>
                <input asp-for="Email"
                       class="w-full p-2 mt-1 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                       placeholder="name@gmail.com" />
                <span asp-validation-for="Email" class="text-danger text-red-500"></span>
            </div>

            <!-- Password Field -->
            <div class="mb-4">
                <label asp-for="Password" class="block text-sm font-medium text-gray-900">Password</label>
                <div class="flex items-center">
                    <input asp-for="Password"
                           class="w-full p-2 mt-1 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                           placeholder="••••••••" />
                    <button type="button" id="togglePassword" class="focus:outline-none -ml-8">
                        <img src="https://media.geeksforgeeks.org/wp-content/uploads/20240227164304/visible.png"
                             alt="toggle password visibility" class="w-4" />
                    </button>
                </div>
                <span asp-validation-for="Password" class="text-danger text-red-500"></span>
            </div>

            <!-- Remember Me & Forgot Password -->
            <div class="flex justify-between items-center mb-4">
                <div>
                    <input asp-for="RememberMe" type="checkbox" class="mr-2" />
                    <label asp-for="RememberMe" class="text-sm text-gray-600">Remember me</label>
                </div>
                <a asp-controller="Account" asp-action="ForgotPassword" class="text-sm text-blue-600">Forgot password?</a>
            </div>

            <button type="submit" class="w-full bg-blue-600 text-white p-2 rounded-md hover:bg-blue-700">
                Sign in to your account
            </button>
        </form>

        <!-- Register Option -->
        <p class="text-gray-500 text-sm mb-6 text-center">
            Don’t have an account? <a asp-controller="Account" asp-action="Register" class="text-blue-600 font-medium">Sign up.</a>
        </p>

        <!-- External Login -->
        <div class="flex items-center my-4">
            <hr class="flex-grow border-gray-300" />
            <span class="px-2 text-gray-500">or</span>
            <hr class="flex-grow border-gray-300" />
        </div>
        <button class="w-full flex items-center justify-center bg-white border p-2 rounded-md shadow-sm mb-2 hover:bg-gray-100 external-login-btn"
                data-provider="Google"
                data-url="@Url.Action("ExternalLogin", "Account", new { provider = "Google", returnUrl = Model.ReturnUrl })">
            <img src="https://www.svgrepo.com/show/355037/google.svg" class="w-5 h-5 mr-2" alt="Google" />
            Sign in with Google
        </button>

        <!-- Resend Confirmation Email Link -->
        <div class="text-center mt-3">
            <a class="text-sm text-blue-600"
               asp-controller="Account"
               asp-action="ResendConfirmationEmail"
               asp-route-Email="@Model.Email">
                Resend Confirmation Email
            </a>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const passIn = document.getElementById("Password");
        const btn = document.getElementById("togglePassword");

        if (passIn && btn) {
            btn.addEventListener("click", function () {
                const type = passIn.getAttribute("type") === "password" ? "text" : "password";
                passIn.setAttribute("type", type);
            });
        }

        document.querySelectorAll('.external-login-btn').forEach(button => {
            button.addEventListener('click', function () {
                var provider = this.getAttribute('data-provider');
                var url = this.getAttribute('data-url');

                // Define popup window size
                var width = 500;
                var height = 600;
                var left = (window.innerWidth / 2) - (width / 2);
                var top = (window.innerHeight / 2) - (height / 2);

                // Open the popup window
                var popup = window.open(url, provider, `width=${width},height=${height},top=${top},left=${left},resizable=yes`);

                // Monitor the popup to check if it closes
                var checkPopup = setInterval(function () {
                    if (popup.closed) {
                        clearInterval(checkPopup);
                        // Optionally, reload or fetch updated user state
                        location.reload(); // Refresh the parent window to reflect login state
                    }
                }, 500); // Check every 500ms if the popup is closed
            });
        });
    });
</script>